
state 0
	$accept: .start $end 

	NUMBER  shift 3
	IDENTIFIER  shift 4
	.  error

	expr  goto 2
	start  goto 1

state 1
	$accept:  start.$end 

	$end  accept
	.  error


state 2
	start:  expr.    (1)
	expr:  expr.CMPOP expr 
	expr:  expr.LOP expr 

	LOP  shift 6
	CMPOP  shift 5
	.  reduce 1 (src line 23)


state 3
	expr:  NUMBER.    (2)

	.  reduce 2 (src line 25)


state 4
	expr:  IDENTIFIER.    (3)

	.  reduce 3 (src line 27)


state 5
	expr:  expr CMPOP.expr 

	NUMBER  shift 3
	IDENTIFIER  shift 4
	.  error

	expr  goto 7

state 6
	expr:  expr LOP.expr 

	NUMBER  shift 3
	IDENTIFIER  shift 4
	.  error

	expr  goto 8

state 7
	expr:  expr.CMPOP expr 
	expr:  expr CMPOP expr.    (4)
	expr:  expr.LOP expr 

	.  reduce 4 (src line 28)


state 8
	expr:  expr.CMPOP expr 
	expr:  expr.LOP expr 
	expr:  expr LOP expr.    (5)

	CMPOP  shift 5
	.  reduce 5 (src line 29)


7 terminals, 3 nonterminals
6 grammar rules, 9/16000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
52 working sets used
memory: parser 3/240000
0 extra closures
9 shift entries, 1 exceptions
4 goto entries
0 entries saved by goto default
Optimizer space used: output 10/240000
10 table entries, 1 zero
maximum spread: 7, maximum offset: 7
